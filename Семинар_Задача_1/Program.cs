// метод - это функция. относится к объекту (метод = движение автомобиля)

// в пяти местах нужно сделать одно и то же и нам нужно 
//поменять во всем коде не 111, а 222. Необх сделать так, чтобы изменить в одном месте
//и избежать дублирования. Для этого нужны методы:
//-методы, кот ничего не принимают и не возвращают VOID
//-методы, кот ничего не возвращают, но принимают какие-то аргументы
//-методы, кот ничего не принимают, но возврвщают какие-то аргументы
//-методы, кот и принимают и возвращают
// Console.WriteLine(111);
// Console.WriteLine(111);
// Console.WriteLine(111);

//Вариант 1. Задаем метод: 
//желательно, чтобы метод выполнял одно действие. Каждый метод д. б. самостоятельным
// void SayLang() // SayLang - наименование метода; скобки пустые, т.к. ничего не принимает
// {
//     Console.WriteLine(111); // описание того, что делает метод
// }

//Теперь вызываем метод в любой части кода
// SayLang(); // теперь мы можем редактировать метод в одном месте вверху

// SayLang();

// SayLang();

//Вариант 2: Задаем метод, кот м принимать какой то аргумент
// void SayLang(string lang) // SayLang - наименование метода; скобки пустые, т.к. ничего не принимает
//                           string - тип вводимого значения
//                           lang - наименование параметра, кот б вводиться далее
// {
//     Console.WriteLine($"Привет, {lang}!"); // описание того, что делает метод
// }

//используем метод впоследствии, задаем переменную метода

// SayLang("С#");

// string lang1 = "Java";
// SayLang(lang1);

// SayLang("PHP");

// SayLang("C++");

// SayLang("Python");

// int SumNum(int numA, int numB) // тип данных / наим метода / вводимые переменные
// { // тело метода
    // int result = numA + numB;

    // return result; // return - окончание работы метода. Как только мы доходим до
                  // return - мы покидаем метод. По аналогии с break в цикле
                  //return м.б. несколько. как только мы дошли до первого, выходим 
// }

// int X = SumNum(2, 3); // программа ищет вверху этот метод и рассчитвает по алгоритму метода
// Console.WriteLine(X);

// int Y = SumNum(10, 3); // программа ищет вверху этот метод и рассчитвает по алгоритму метода
// Console.WriteLine(Y);

// Console.WriteLine(SumNum(15, 3)); // программа ищет вверху этот метод и рассчитвает по алгоритму метода


// пример: ходим вычесть из большего числа меньшее. мы будем сравнивать

int SumNum(int numA, int numB) 
{ // тело метода
    if (numA > numB)
    {
    int result = numA - numB;
    return result;
    }
    
    else
    {
    int result = numB - numA;
    return result; // return - окончание работы метода. Как только мы доходим до
                  // return - мы покидаем метод. По аналогии с break в цикле
                  //return м.б. несколько. как только мы дошли до первого, выходим 
    }
}

int X = SumNum(2, 3); // программа ищет вверху этот метод и рассчитвает по алгоритму метода
Console.WriteLine(X);

int Y = SumNum(10, 3); // программа ищет вверху этот метод и рассчитвает по алгоритму метода
Console.WriteLine(Y);

Console.WriteLine(SumNum(15, 3)); // программа ищет вверху этот метод и рассчитвает по алгоритму метода
